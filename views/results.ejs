<!DOCTYPE html>
<html lang="<%= currentLocale %>">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= __('Property Search Results') %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
  <style>
    /* (Existing CSS content remains unchanged) */
    
    :root {
      --primary-blue: #4169e1;
      --card-shadow: 0 8px 24px rgba(0,0,0,0.12);
    }
    
    body {
      margin: 0;
      padding: 0;
      height: 100vh;
      overflow: hidden;
      font-family: 'Inter', -apple-system, sans-serif;
    }
    
    .main-container {
      height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .map-container {
      flex: 1;
      position: relative;
      width: 100%;
    }
    
    #map {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }
    
    .property-cards-container {
      position: absolute;
      bottom: 24px;
      left: 24px;
      right: 24px;
      z-index: 2;
      overflow-x: auto;
      display: flex;
      gap: 20px;
      padding: 4px;
    }
    
    .property-card {
      flex: 0 0 auto;
      width: 320px;
      background: white;
      border-radius: 16px;
      overflow: hidden;
      box-shadow: var(--card-shadow);
      transition: all 0.3s ease;
      cursor: pointer;
    }
    
    .property-card:hover {
      transform: translateY(-4px);
    }
    
    .property-image {
      width: 100%;
      height: 200px;
      object-fit: cover;
      object-position: center;
      background-color: #f3f4f6;
    }
    
    .property-image-container {
      position: relative;
      width: 100%;
      height: 200px;
      overflow: hidden;
      background: #f3f4f6;
    }
    
    .card-tag {
      position: absolute;
      top: 12px;
      left: 12px;
      padding: 4px 12px;
      border-radius: 20px;
      font-size: 0.85rem;
      font-weight: 500;
    }
    
    .tag-rent {
      background: var(--primary-blue);
      color: white;
    }
    
    .tag-sale {
      background: #ff7043;
      color: white;
    }
    
    .property-details {
      padding: 16px;
    }
    
    .property-price {
      color: var(--primary-blue);
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 8px;
    }
    
    .property-title {
      font-weight: 600;
      margin-bottom: 4px;
      color: #1a1a1a;
    }
    
    .property-location {
      font-size: 0.9rem;
      color: #666;
      margin-bottom: 12px;
      display: flex;
      align-items: center;
      gap: 4px;
    }
    
    .property-features {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 12px;
      font-size: 0.85rem;
      color: #666;
    }
    
    .feature-item {
      display: flex;
      align-items: center;
      gap: 4px;
    }
    
    .feature-icon {
      color: var(--primary-blue);
      font-size: 1rem;
    }
    
    .map-controls {
      position: absolute;
      top: 24px;
      right: 24px;
      z-index: 2;
      display: flex;
      gap: 12px;
    }
    
    .map-control-btn {
      background: white;
      border: none;
      width: 40px;
      height: 40px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .map-control-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    
    /* Custom scrollbar for property cards container */
    .property-cards-container::-webkit-scrollbar {
      height: 6px;
    }
    
    .property-cards-container::-webkit-scrollbar-track {
      background: rgba(255,255,255,0.4);
      border-radius: 10px;
    }
    
    .property-cards-container::-webkit-scrollbar-thumb {
      background: rgba(0,0,0,0.2);
      border-radius: 10px;
    }
    
    .leaflet-popup-content-wrapper {
      padding: 0;
      overflow: hidden;
      border-radius: 12px;
    }
    
    .leaflet-popup-content {
      margin: 0;
      width: 280px !important;
    }
    
    .popup-content {
      font-family: 'Inter', -apple-system, sans-serif;
    }
    
    .popup-image {
      width: 100%;
      height: 160px;
      object-fit: cover;
      display: block;
    }
    
    .popup-details {
      padding: 16px;
    }
    
    .popup-title {
      font-size: 16px;
      font-weight: 600;
      color: #1a1a1a;
      margin-bottom: 8px;
    }
    
    .popup-address {
      font-size: 14px;
      color: #666;
      margin-bottom: 12px;
      display: flex;
      align-items: center;
      gap: 4px;
    }
    
    .popup-features {
      display: flex;
      gap: 12px;
      font-size: 13px;
      color: #666;
    }
    
    .property-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7);
      z-index: 2000;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .property-modal.active {
      display: flex;
      opacity: 1;
    }
    
    .modal-content {
      position: relative;
      width: 90%;
      max-width: 800px;
      max-height: 90vh;
      margin: auto;
      background: white;
      border-radius: 16px;
      overflow: hidden;
      transform: translateY(20px);
      transition: transform 0.3s ease;
      display: flex;
      flex-direction: column;
    }
    
    .property-modal.active .modal-content {
      transform: translateY(0);
    }
    
    .modal-header {
      position: relative;
      height: 300px;
    }
    
    .modal-header img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .modal-close {
      position: absolute;
      top: 16px;
      right: 16px;
      background: white;
      border: none;
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 2px 8px rgba(0,0,0,0.2);
      transition: transform 0.2s;
    }
    
    .modal-close:hover {
      transform: scale(1.1);
    }
    
    .modal-body {
      padding: 24px;
      overflow-y: auto;
      max-height: 100%;
      scrollbar-width: none;
      -ms-overflow-style: none;
    }
    
    .modal-body::-webkit-scrollbar {
      display: none;
    }
    
    .modal-section {
      margin-bottom: 24px;
    }
    
    .modal-section-title {
      font-size: 14px;
      font-weight: 600;
      color: #666;
      text-transform: uppercase;
      margin-bottom: 12px;
    }
    
    .property-info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 16px;
    }
    
    .info-item {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 15px;
    }
    
    .info-icon {
      width: 32px;
      height: 32px;
      background: #f3f4f6;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--primary-blue);
    }
    
    .top-nav {
      width: 100%;
      position: fixed;
      top: 0;
      left: 0;
      background: white;
      z-index: 1050;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .nav-menu {
      display: flex;
      gap: 2rem;
    }
    
    @media (max-width: 768px) {
      .nav-menu {
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        padding: 1rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      }
      .nav-menu.active {
        display: block;
      }
      .nav-menu a {
        display: block;
        padding: 0.5rem 0;
      }
    }
    
    .export-btn {
      position: absolute;
      top: 12px;
      right: 12px;
      background: rgba(255, 255, 255, 0.9);
      border: none;
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 2px 8px rgba(0,0,0,0.15);
      transition: all 0.2s ease;
      z-index: 10;
    }
    
    .export-btn:hover {
      transform: scale(1.1);
      background: white;
    }
    
    .export-btn i {
      color: var(--primary-blue);
      font-size: 1.1rem;
    }
    
    .modal-export-btn {
      position: sticky;
      bottom: 24px;
      margin-left: auto;
      background: var(--primary-blue);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      gap: 8px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      box-shadow: 0 4px 12px rgba(65, 105, 225, 0.2);
    }
    
    .modal-export-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(65, 105, 225, 0.3);
    }
    
    .modal-export-btn i {
      font-size: 1.1rem;
    }
    
    .error-container {
      text-align: center;
      padding: 2rem;
      background: white;
      border-radius: 12px;
      box-shadow: var(--card-shadow);
    }
    
    .error-icon {
      font-size: 3rem;
      color: #dc3545;
      margin-bottom: 1rem;
    }
    
    .no-results {
      text-align: center;
      padding: 2rem;
      background: rgba(255, 255, 255, 0.9);
      border-radius: 12px;
      margin: 2rem;
    }
    
    /* Enhanced map view button styles */
    .map-view-btn {
      background: white;
      border: 2px solid #4361ee;
      padding: 10px 20px;
      font-size: 15px;
      color: #4361ee;
      display: flex;
      align-items: center;
      gap: 8px;
      transition: all 0.3s ease;
      cursor: pointer;
      border-radius: 8px;
      font-weight: 500;
      min-width: 100px;
      justify-content: center;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .map-view-btn:hover {
      background: #f8f9fa;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .map-view-btn.active {
      background: #4361ee;
      color: white;
      border-color: #4361ee;
      box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
    }

    .map-view-btn i {
      font-size: 18px;
    }

    .map-view-controls {
      position: absolute;
      bottom: 24px;
      right: 84px;
      z-index: 2000;
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
      padding: 8px;
      display: flex;
      gap: 8px;
      align-items: center;
    }

    @media (max-width: 576px) {
      .map-view-btn {
        min-width: auto;
        padding: 10px;
      }
      
      .map-view-controls {
        right: 50%;
        transform: translateX(50%);
        bottom: 32px;
      }
      
      .map-view-btn .d-sm-inline {
        display: none !important;
      }
    }
  </style>
</head>
<body>
  <!-- Updated Navbar -->
  <header class="top-nav">
    <div class="py-2" style="background-color: #0b3558; color: white;">
      <div class="container">
        <div class="d-flex justify-content-between align-items-center">
          <div class="d-flex align-items-center">
            <img src="\img\emblem.png" alt="Emblem | प्रतीक" width="24" height="24" class="me-2">
            <span>भारत सरकार | Government of India</span>
          </div>
          <div>
            <em><%= __('Ministry of Digital Infrastructure & Services') %></em>
          </div>
        </div>
      </div>
    </div>

    <div class="container py-2">
      <div class="d-flex justify-content-between align-items-center">
        <a href="/" class="navbar-brand">
          <img src="\img\logo.png" alt="<%= __('Logo') %> | लोगो" height="48">
        </a>
        
        <nav class="nav-menu d-none d-md-flex align-items-center">
          <a href="/" class="nav-link"> <%= __('Home') %></a>
          <a href="/contact" class="nav-link"><%= __('Contact') %></a>
        </nav>
      </div>
    </div>

    <div class="d-flex">
      <div class="flex-grow-1" style="height: 4px; background-color: #ff9933;"></div>
      <div class="flex-grow-1" style="height: 4px; background-color: #ffffff;"></div>
      <div class="flex-grow-1" style="height: 4px; background-color: #138808;"></div>
    </div>
  </header>

  <!-- Main Content -->
  <div class="main-container">
    <% if (typeof results === 'undefined' || results.length === 0) { %>
      <div class="no-results">
        <i class="bi bi-search" style="font-size: 3rem; color: #6c757d;"></i>
        <h2 class="mt-3"><%= __('No Results Found') %></h2>
        <p class="text-muted"><%= __('Try adjusting your search criteria') %></p>
        <a href="/search" class="btn btn-primary mt-3">
          <i class="bi bi-arrow-left"></i> <%= __('Back to Search') %>
        </a>
      </div>
    <% } else { %>
      <!-- Map Container -->
      <div class="map-container">
        <!-- Map View Controls with improved visibility -->
        <div class="map-view-controls">
          <button id="streetBtn" class="map-view-btn active">
            <i class="bi bi-map"></i>
            <span class="d-none d-sm-inline">Street</span>
          </button>
          <button id="satelliteBtn" class="map-view-btn">
            <i class="bi bi-globe-americas"></i>
            <span class="d-none d-sm-inline">Satellite</span>
          </button>
          <button id="terrainBtn" class="map-view-btn">
            <i class="bi bi-mountain"></i>
            <span class="d-none d-sm-inline">Terrain</span>
          </button>
        </div>

        <div id="map"></div>
        
        <!-- Map Controls (Zoom In/Out) -->
        <div class="map-controls">
          <button class="map-control-btn">
            <i class="bi bi-plus-lg"></i>
          </button>
          <button class="map-control-btn">
            <i class="bi bi-dash-lg"></i>
          </button>
        </div>

        <!-- Property Cards -->
        <div class="property-cards-container">
          <% results.forEach((property, index) => { %>
            <div class="property-card" onclick="showPropertyDetails(<%= index %>)">
              <div class="property-image-container">
                <button class="export-btn" onclick="exportPropertyReport(<%= index %>); event.stopPropagation();">
                  <i class="bi bi-download"></i>
                </button>
                <img 
                  src="<%= property.imageUrl || 'https://5.imimg.com/data5/SELLER/Default/2021/3/KO/QG/XG/3922575/luxury-bungalow-design-500x500.jpg' %>" 
                  class="property-image"
                  alt="<%= property.name || 'Property' %>"
                  onerror="this.onerror=null; this.src='https://5.imimg.com/data5/SELLER/Default/2021/3/KO/QG/XG/3922575/luxury-bungalow-design-500x500.jpg';"
                >
              </div>
              <div class="property-details">
                <h3 class="property-title">
                  <%= property.name || property.ownerName || __('Property Name Not Available') %>
                </h3>
                <div class="property-location">
                  <i class="bi bi-geo-alt"></i>
                  <%= property.address || __('Address Not Available') %>
                </div>
                <div class="property-features">
                  <div class="feature-item">
                    <i class="bi bi-rulers feature-icon"></i>
                    <%= property.squareFeet ? `${property.squareFeet} sqft` : __('Area Not Available') %>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    <% } %>
  </div>

  <div class="property-modal" id="propertyModal">
    <div class="modal-content">
      <div class="modal-header">
        <img id="modalImage" src="" alt="Property">
        <button class="modal-close" onclick="closePropertyModal()">
          <i class="bi bi-x-lg"></i>
        </button>
      </div>
      <div class="modal-body">
        <h2 id="modalTitle" class="property-title mb-2"></h2>
        <div id="modalAddress" class="property-location mb-4"></div>
        
        <div class="modal-section">
          <div class="modal-section-title"><%= __('Property Details') %></div>
          <div class="property-info-grid">
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-rulers"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Area') %></div>
                <div id="modalArea"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-geo-alt"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('State') %></div>
                <div id="modalState"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-geo"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('District') %></div>
                <div id="modalDistrict"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-pin-map"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Sub District') %></div>
                <div id="modalSubDistrict"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-buildings"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('City/Village') %></div>
                <div id="modalCityVillage"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-123"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Pincode') %></div>
                <div id="modalPincode"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-geo-fill"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Coordinates') %></div>
                <div id="modalCoordinates"></div>
              </div>
            </div>
          </div>
        </div>

        <div class="modal-section">
          <div class="modal-section-title"><%= __('Registration Information') %></div>
          <div class="property-info-grid">
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-person"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Owner') %></div>
                <div id="modalOwner"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-hash"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Property ID') %></div>
                <div id="modalPropertyId"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-card-text"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Registration No.') %></div>
                <div id="modalRegistration"></div>
              </div>
            </div>
            <div class="info-item">
              <div class="info-icon">
                <i class="bi bi-calendar-event"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Registration Date') %></div>
                <div id="modalRegistrationDate"></div>
              </div>
            </div>
          </div>
        </div>

        <div class="modal-section">
          <div class="modal-section-title"><%= __('Additional Information') %></div>
          <div class="property-info-grid">
            <div class="info-item" style="grid-column: 1 / -1;">
              <div class="info-icon">
                <i class="bi bi-exclamation-circle"></i>
              </div>
              <div>
                <div class="text-muted"><%= __('Encumbrances') %></div>
                <div id="modalEncumbrances"></div>
              </div>
            </div>
          </div>
        </div>

        <button 
          class="modal-export-btn" 
          onclick="exportPropertyReport(currentPropertyIndex)"
          type="button"
        >
          <i class="bi bi-download"></i>
          <%= __('Export Report') %>
        </button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      try {
        const map = L.map('map', { zoomControl: false });

        // Define different map tile layers
        const streetLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 19,
          attribution: '© OpenStreetMap contributors'
        });

        const satelliteLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
          maxZoom: 19,
          attribution: '© Esri'
        });

        const terrainLayer = L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
          maxZoom: 17,
          attribution: '© OpenTopoMap contributors'
        });

        // Variable to track current layer
        let currentTileLayer = streetLayer;
        currentTileLayer.addTo(map);

        // Add event listeners to buttons
        document.querySelectorAll('.map-view-btn').forEach((button) => {
          button.addEventListener('click', function() {
            // Remove active class from all buttons
            document.querySelectorAll('.map-view-btn').forEach(btn => {
              btn.classList.remove('active');
            });
            // Add active class to clicked button
            this.classList.add('active');
            
            // Handle map layer change
            map.eachLayer((layer) => {
              if (layer instanceof L.TileLayer) {
                map.removeLayer(layer);
              }
            });
            
            // Add appropriate layer based on button ID
            if (this.id === 'satelliteBtn') {
              satelliteLayer.addTo(map);
            } else if (this.id === 'terrainBtn') {
              terrainLayer.addTo(map);
            } else {
              streetLayer.addTo(map);
            }
          });
        });

        // Set initial active state
        document.getElementById('streetBtn').classList.add('active');

        const markers = [];
        const markerCounts = {};
        
        <% results.forEach((property, index) => { %>
          try {
            let lat = parseFloat("<%= property.latitude %>");
            let lng = parseFloat("<%= property.longitude %>");
            const key = lat.toFixed(6) + "_" + lng.toFixed(6);
            let count = markerCounts[key] || 0;
            
            if (isNaN(lat) || isNaN(lng)) {
              console.error('Invalid coordinates for property:', <%= index %>);
              return;
            }
            
            if (count > 0) {
              lat += count * 0.0001;
              lng += count * 0.0001;
            }
            markerCounts[key] = count + 1;

            // Custom marker icon
            const markerIcon = L.divIcon({
              html: `<div style="
                background-color: white;
                border: 2px solid #4169e1;
                border-radius: 50%;
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
              ">
                <i class="bi bi-house-door" style="color: #4169e1;"></i>
              </div>`,
              className: 'custom-marker',
              iconSize: [32, 32],
              iconAnchor: [16, 16]
            });

            const marker = L.marker([lat, lng], { icon: markerIcon })
              .bindPopup(`
                <div class="popup-content">
                  <img 
                    src="${'<%= property.imageUrl || "https://5.imimg.com/data5/SELLER/Default/2021/3/KO/QG/XG/3922575/luxury-bungalow-design-500x500.jpg" %>'}"
                    class="popup-image"
                    onerror="this.onerror=null; this.src='https://5.imimg.com/data5/SELLER/Default/2021/3/KO/QG/XG/3922575/luxury-bungalow-design-500x500.jpg';"
                    alt="${'<%= property.name || "Property" %>'}"
                  >
                  <div class="popup-details">
                    <div class="popup-title">${'<%= property.name || property.ownerName %>'}</div>
                    <div class="popup-address">
                      <i class="bi bi-geo-alt"></i>
                      ${'<%= property.address %>'}
                    </div>
                    <div class="popup-features">
                      <div>
                        <i class="bi bi-rulers feature-icon"></i>
                        ${'<%= property.squareFeet || "N/A" %>'} sqft
                      </div>
                      <div>
                        <i class="bi bi-door-open feature-icon"></i>
                        ${'<%= property.bedrooms || "4" %>'} Beds
                      </div>
                      <div>
                        <i class="bi bi-droplet feature-icon"></i>
                        ${'<%= property.bathrooms || "2" %>'} Baths
                      </div>
                    </div>
                  </div>
                </div>
              `, {
                maxWidth: 280,
                className: 'custom-popup'
              });
            
            markers.push(marker);
            marker.addTo(map);
          } catch (err) {
            console.error('Error creating marker for property:', <%= index %>, err);
          }
        <% }); %>

        if (markers.length > 0) {
          const group = new L.featureGroup(markers);
          const bounds = group.getBounds();
          if (bounds.isValid() && bounds.getNorthEast().equals(bounds.getSouthWest())) {
            map.setView(bounds.getCenter(), 15);
          } else {
            map.fitBounds(bounds.pad(0.1));
          }
        }

        // Handle map control buttons (zoom in/out)
        document.querySelectorAll('.map-control-btn').forEach((btn, index) => {
          btn.addEventListener('click', () => {
            // Zoom buttons are handled separately above
            if (index === 0 && btn.querySelector('i.bi-plus-lg')) map.zoomIn();
            if (index === 1 && btn.querySelector('i.bi-dash-lg')) map.zoomOut();
          });
        });
      } catch (err) {
        console.error('Error initializing map:', err);
        document.getElementById('map').innerHTML = `
          <div class="error-container">
            <i class="bi bi-exclamation-triangle error-icon"></i>
            <h3>${'<%= __("Error Loading Map") %>'}</h3>
            <p class="text-muted">${'<%= __("Please try refreshing the page") %>'}</p>
          </div>
        `;
      }
    });

    // Store property data globally
    const propertyData = <%- JSON.stringify(results) %>;
    let currentPropertyIndex = 0;

    function showPropertyDetails(index) {
      try {
        currentPropertyIndex = index;
        const property = propertyData[index];
        if (!property) throw new Error('Property data not found');
        
        const modal = document.getElementById('propertyModal');
        if (!modal) throw new Error('Modal element not found');
        
        document.getElementById('modalImage').src = property.imageUrl || 'https://5.imimg.com/data5/SELLER/Default/2021/3/KO/QG/XG/3922575/luxury-bungalow-design-500x500.jpg';
        document.getElementById('modalTitle').textContent = property.name || property.ownerName || '<%= __("Name Not Available") %>';
        document.getElementById('modalAddress').innerHTML = `<i class="bi bi-geo-alt"></i> ${property.address || '<%= __("N/A") %>'}`;
        document.getElementById('modalArea').textContent = `${property.squareFeet || '<%= __("N/A") %>'} <%= __("sqft") %>`;
        document.getElementById('modalState').textContent = property.state || '<%= __("N/A") %>';
        document.getElementById('modalDistrict').textContent = property.district || '<%= __("N/A") %>';
        document.getElementById('modalSubDistrict').textContent = property.subDistrict || '<%= __("N/A") %>';
        document.getElementById('modalCityVillage').textContent = property.cityOrVillage || '<%= __("N/A") %>';
        document.getElementById('modalPincode').textContent = property.pincode || '<%= __("N/A") %>';
        document.getElementById('modalCoordinates').textContent = `${property.latitude || '<%= __("N/A") %>'}, ${property.longitude || '<%= __("N/A") %>'}`;
        document.getElementById('modalOwner').textContent = property.ownerName || '<%= __("N/A") %>';
        document.getElementById('modalPropertyId').textContent = property.propertyId || '<%= __("N/A") %>';
        document.getElementById('modalRegistration').textContent = property.registrationNumber || '<%= __("N/A") %>';
        document.getElementById('modalRegistrationDate').textContent = property.registrationDate || '<%= __("N/A") %>';
        document.getElementById('modalEncumbrances').textContent = property.encumbrances || '<%= __("None") %>';
        
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
      } catch (err) {
        console.error('Error showing property details:', err);
        alert('<%= __("Error loading property details. Please try again.") %>');
      }
    }

    function closePropertyModal() {
      const modal = document.getElementById('propertyModal');
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }

    document.getElementById('propertyModal').addEventListener('click', function(e) {
      if (e.target === this) {
        closePropertyModal();
      }
    });

    function exportPropertyReport(index) {
      try {
        const property = propertyData[index];
        if (!property) throw new Error('Property data not found');
        
        const reportContent = `
Property Report

Property Details:
----------------
Owner Name: ${property.ownerName || '<%= __("Not Available") %>'}
Property ID: ${property.propertyId || '<%= __("Not Available") %>'}
Registration Number: ${property.registrationNumber || '<%= __("Not Available") %>'}
Registration Date: ${property.registrationDate || '<%= __("Not Available") %>'}

Location Details:
----------------
Address: ${property.address || '<%= __("Not Available") %>'}
State: ${property.state || '<%= __("Not Available") %>'}
District: ${property.district || '<%= __("Not Available") %>'}
Sub District: ${property.subDistrict || '<%= __("Not Available") %>'}
City/Village: ${property.cityOrVillage || '<%= __("Not Available") %>'}
Pincode: ${property.pincode || '<%= __("Not Available") %>'}
Coordinates: ${property.latitude || '<%= __("Not Available") %>'}, ${property.longitude || '<%= __("Not Available") %>'}

Property Specifications:
----------------------
Area: ${property.squareFeet || '<%= __("Not Available") %>'} sqft

Additional Information:
---------------------
Encumbrances: ${property.encumbrances || '<%= __("None") %>'}

Generated on: ${new Date().toLocaleString()}
        `.trim();

        const blob = new Blob([reportContent], { type: 'text/plain' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `property_report_${property.propertyId || 'unknown'}.txt`;
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
      } catch (err) {
        console.error('Error exporting property report:', err);
        alert('<%= __("Error generating report. Please try again.") %>');
      }
    }

    function changeLanguage(lang) {
      document.cookie = `lang=${lang};path=/`;
      window.location.reload();
    }
  </script>
</body>
</html>